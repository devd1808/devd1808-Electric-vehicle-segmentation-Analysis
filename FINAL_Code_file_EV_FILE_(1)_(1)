{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 242,
      "id": "e2b196ed",
      "metadata": {
        "id": "e2b196ed"
      },
      "outputs": [],
      "source": [
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 243,
      "id": "21ed8a1a",
      "metadata": {
        "id": "21ed8a1a"
      },
      "outputs": [],
      "source": [
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 244,
      "id": "3bfa05a7",
      "metadata": {
        "id": "3bfa05a7"
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 245,
      "id": "77d16a67",
      "metadata": {
        "id": "77d16a67"
      },
      "outputs": [],
      "source": [
        "df = pd.read_csv('ElectricCarData_Clean.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 246,
      "id": "eab1f379",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "eab1f379",
        "outputId": "ed802d03-4c63-4b10-d754-58174fe9dc04"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           Brand                            Model  AccelSec  TopSpeed_KmH  \\\n",
              "0         Tesla     Model 3 Long Range Dual Motor       4.6           233   \n",
              "1    Volkswagen                         ID.3 Pure      10.0           160   \n",
              "2      Polestar                                 2       4.7           210   \n",
              "3           BMW                              iX3        6.8           180   \n",
              "4         Honda                                e        9.5           145   \n",
              "..           ...                              ...       ...           ...   \n",
              "98       Nissan                       Ariya 63kWh       7.5           160   \n",
              "99         Audi     e-tron S Sportback 55 quattro       4.5           210   \n",
              "100      Nissan               Ariya e-4ORCE 63kWh       5.9           200   \n",
              "101      Nissan   Ariya e-4ORCE 87kWh Performance       5.1           200   \n",
              "102       Byton                 M-Byte 95 kWh 2WD       7.5           190   \n",
              "\n",
              "     Range_Km  Efficiency_WhKm FastCharge_KmH RapidCharge PowerTrain  \\\n",
              "0         450              161            940         Yes        AWD   \n",
              "1         270              167            250         Yes        RWD   \n",
              "2         400              181            620         Yes        AWD   \n",
              "3         360              206            560         Yes        RWD   \n",
              "4         170              168            190         Yes        RWD   \n",
              "..        ...              ...            ...         ...        ...   \n",
              "98        330              191            440         Yes        FWD   \n",
              "99        335              258            540         Yes        AWD   \n",
              "100       325              194            440         Yes        AWD   \n",
              "101       375              232            450         Yes        AWD   \n",
              "102       400              238            480         Yes        AWD   \n",
              "\n",
              "       PlugType  BodyStyle Segment  Seats  PriceEuro  \n",
              "0    Type 2 CCS      Sedan       D      5      55480  \n",
              "1    Type 2 CCS  Hatchback       C      5      30000  \n",
              "2    Type 2 CCS   Liftback       D      5      56440  \n",
              "3    Type 2 CCS        SUV       D      5      68040  \n",
              "4    Type 2 CCS  Hatchback       B      4      32997  \n",
              "..          ...        ...     ...    ...        ...  \n",
              "98   Type 2 CCS  Hatchback       C      5      45000  \n",
              "99   Type 2 CCS        SUV       E      5      96050  \n",
              "100  Type 2 CCS  Hatchback       C      5      50000  \n",
              "101  Type 2 CCS  Hatchback       C      5      65000  \n",
              "102  Type 2 CCS        SUV       E      5      62000  \n",
              "\n",
              "[103 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-df9b35f6-2f24-4310-acd7-838f016ba136\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Brand</th>\n",
              "      <th>Model</th>\n",
              "      <th>AccelSec</th>\n",
              "      <th>TopSpeed_KmH</th>\n",
              "      <th>Range_Km</th>\n",
              "      <th>Efficiency_WhKm</th>\n",
              "      <th>FastCharge_KmH</th>\n",
              "      <th>RapidCharge</th>\n",
              "      <th>PowerTrain</th>\n",
              "      <th>PlugType</th>\n",
              "      <th>BodyStyle</th>\n",
              "      <th>Segment</th>\n",
              "      <th>Seats</th>\n",
              "      <th>PriceEuro</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Tesla</td>\n",
              "      <td>Model 3 Long Range Dual Motor</td>\n",
              "      <td>4.6</td>\n",
              "      <td>233</td>\n",
              "      <td>450</td>\n",
              "      <td>161</td>\n",
              "      <td>940</td>\n",
              "      <td>Yes</td>\n",
              "      <td>AWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>Sedan</td>\n",
              "      <td>D</td>\n",
              "      <td>5</td>\n",
              "      <td>55480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Volkswagen</td>\n",
              "      <td>ID.3 Pure</td>\n",
              "      <td>10.0</td>\n",
              "      <td>160</td>\n",
              "      <td>270</td>\n",
              "      <td>167</td>\n",
              "      <td>250</td>\n",
              "      <td>Yes</td>\n",
              "      <td>RWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>Hatchback</td>\n",
              "      <td>C</td>\n",
              "      <td>5</td>\n",
              "      <td>30000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Polestar</td>\n",
              "      <td>2</td>\n",
              "      <td>4.7</td>\n",
              "      <td>210</td>\n",
              "      <td>400</td>\n",
              "      <td>181</td>\n",
              "      <td>620</td>\n",
              "      <td>Yes</td>\n",
              "      <td>AWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>Liftback</td>\n",
              "      <td>D</td>\n",
              "      <td>5</td>\n",
              "      <td>56440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BMW</td>\n",
              "      <td>iX3</td>\n",
              "      <td>6.8</td>\n",
              "      <td>180</td>\n",
              "      <td>360</td>\n",
              "      <td>206</td>\n",
              "      <td>560</td>\n",
              "      <td>Yes</td>\n",
              "      <td>RWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>SUV</td>\n",
              "      <td>D</td>\n",
              "      <td>5</td>\n",
              "      <td>68040</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Honda</td>\n",
              "      <td>e</td>\n",
              "      <td>9.5</td>\n",
              "      <td>145</td>\n",
              "      <td>170</td>\n",
              "      <td>168</td>\n",
              "      <td>190</td>\n",
              "      <td>Yes</td>\n",
              "      <td>RWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>Hatchback</td>\n",
              "      <td>B</td>\n",
              "      <td>4</td>\n",
              "      <td>32997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>Nissan</td>\n",
              "      <td>Ariya 63kWh</td>\n",
              "      <td>7.5</td>\n",
              "      <td>160</td>\n",
              "      <td>330</td>\n",
              "      <td>191</td>\n",
              "      <td>440</td>\n",
              "      <td>Yes</td>\n",
              "      <td>FWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>Hatchback</td>\n",
              "      <td>C</td>\n",
              "      <td>5</td>\n",
              "      <td>45000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>Audi</td>\n",
              "      <td>e-tron S Sportback 55 quattro</td>\n",
              "      <td>4.5</td>\n",
              "      <td>210</td>\n",
              "      <td>335</td>\n",
              "      <td>258</td>\n",
              "      <td>540</td>\n",
              "      <td>Yes</td>\n",
              "      <td>AWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>SUV</td>\n",
              "      <td>E</td>\n",
              "      <td>5</td>\n",
              "      <td>96050</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>Nissan</td>\n",
              "      <td>Ariya e-4ORCE 63kWh</td>\n",
              "      <td>5.9</td>\n",
              "      <td>200</td>\n",
              "      <td>325</td>\n",
              "      <td>194</td>\n",
              "      <td>440</td>\n",
              "      <td>Yes</td>\n",
              "      <td>AWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>Hatchback</td>\n",
              "      <td>C</td>\n",
              "      <td>5</td>\n",
              "      <td>50000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101</th>\n",
              "      <td>Nissan</td>\n",
              "      <td>Ariya e-4ORCE 87kWh Performance</td>\n",
              "      <td>5.1</td>\n",
              "      <td>200</td>\n",
              "      <td>375</td>\n",
              "      <td>232</td>\n",
              "      <td>450</td>\n",
              "      <td>Yes</td>\n",
              "      <td>AWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>Hatchback</td>\n",
              "      <td>C</td>\n",
              "      <td>5</td>\n",
              "      <td>65000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>Byton</td>\n",
              "      <td>M-Byte 95 kWh 2WD</td>\n",
              "      <td>7.5</td>\n",
              "      <td>190</td>\n",
              "      <td>400</td>\n",
              "      <td>238</td>\n",
              "      <td>480</td>\n",
              "      <td>Yes</td>\n",
              "      <td>AWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>SUV</td>\n",
              "      <td>E</td>\n",
              "      <td>5</td>\n",
              "      <td>62000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>103 rows × 14 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-df9b35f6-2f24-4310-acd7-838f016ba136')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-df9b35f6-2f24-4310-acd7-838f016ba136 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-df9b35f6-2f24-4310-acd7-838f016ba136');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 246
        }
      ],
      "source": [
        "df"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "d7dfe7c3",
      "metadata": {
        "id": "d7dfe7c3"
      },
      "source": [
        "# Checking if Null Values are present "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 247,
      "id": "de4bc2a6",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "de4bc2a6",
        "outputId": "2a1ca114-2f0f-49fb-d822-73194e5ab5f3"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Brand              0\n",
              "Model              0\n",
              "AccelSec           0\n",
              "TopSpeed_KmH       0\n",
              "Range_Km           0\n",
              "Efficiency_WhKm    0\n",
              "FastCharge_KmH     0\n",
              "RapidCharge        0\n",
              "PowerTrain         0\n",
              "PlugType           0\n",
              "BodyStyle          0\n",
              "Segment            0\n",
              "Seats              0\n",
              "PriceEuro          0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 247
        }
      ],
      "source": [
        "df.isna().sum()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "37d5b427",
      "metadata": {
        "id": "37d5b427"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 248,
      "id": "3cbb4448",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3cbb4448",
        "outputId": "929b6a78-c245-4a2b-d853-b8a90b6c93a9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 103 entries, 0 to 102\n",
            "Data columns (total 14 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   Brand            103 non-null    object \n",
            " 1   Model            103 non-null    object \n",
            " 2   AccelSec         103 non-null    float64\n",
            " 3   TopSpeed_KmH     103 non-null    int64  \n",
            " 4   Range_Km         103 non-null    int64  \n",
            " 5   Efficiency_WhKm  103 non-null    int64  \n",
            " 6   FastCharge_KmH   103 non-null    object \n",
            " 7   RapidCharge      103 non-null    object \n",
            " 8   PowerTrain       103 non-null    object \n",
            " 9   PlugType         103 non-null    object \n",
            " 10  BodyStyle        103 non-null    object \n",
            " 11  Segment          103 non-null    object \n",
            " 12  Seats            103 non-null    int64  \n",
            " 13  PriceEuro        103 non-null    int64  \n",
            "dtypes: float64(1), int64(5), object(8)\n",
            "memory usage: 11.4+ KB\n"
          ]
        }
      ],
      "source": [
        "df.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 249,
      "id": "a3b9c293",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a3b9c293",
        "outputId": "703dda9d-8879-4a25-8dce-405ef6c021e2"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['AWD', 'RWD', 'FWD'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 249
        }
      ],
      "source": [
        "df['PowerTrain'].unique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 250,
      "id": "7d3e8a09",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7d3e8a09",
        "outputId": "abd1ce07-72c5-4323-be39-dd0d3eeb8f80"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Type 2 CCS', 'Type 2 CHAdeMO', 'Type 2', 'Type 1 CHAdeMO'],\n",
              "      dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 250
        }
      ],
      "source": [
        "df['PlugType'].unique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 251,
      "id": "9155ce3c",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9155ce3c",
        "outputId": "490a84f9-8901-4bb9-afdd-b9932a886bba"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Sedan', 'Hatchback', 'Liftback', 'SUV', 'Pickup', 'MPV', 'Cabrio',\n",
              "       'SPV', 'Station'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 251
        }
      ],
      "source": [
        "df['BodyStyle'].unique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 252,
      "id": "896279a2",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "896279a2",
        "outputId": "0a2ead7d-8898-4414-dee6-ff29f52d5e1e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['D', 'C', 'B', 'F', 'A', 'E', 'N', 'S'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 252
        }
      ],
      "source": [
        "df['Segment'].unique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 253,
      "id": "8aa7e5f5",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8aa7e5f5",
        "outputId": "09017eb8-5bd6-457c-b825-24a8cc6bb6b1"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['Yes', 'No'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 253
        }
      ],
      "source": [
        "df['RapidCharge'].unique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 254,
      "id": "992af9c5",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "992af9c5",
        "outputId": "9fb4577a-0605-4616-c453-32909a870c7c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['940', '250', '620', '560', '190', '220', '420', '650', '540',\n",
              "       '440', '230', '380', '210', '590', '780', '170', '260', '930',\n",
              "       '850', '910', '490', '470', '270', '450', '350', '710', '240',\n",
              "       '390', '570', '610', '340', '730', '920', '-', '550', '900', '520',\n",
              "       '430', '890', '410', '770', '460', '360', '810', '480', '290',\n",
              "       '330', '740', '510', '320', '500'], dtype=object)"
            ]
          },
          "metadata": {},
          "execution_count": 254
        }
      ],
      "source": [
        "df['FastCharge_KmH'].unique()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "e561d8ea",
      "metadata": {
        "id": "e561d8ea"
      },
      "source": [
        "# There were hypen present in FastCharge_KmH so we replaced it with mean of the attribute\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 255,
      "id": "1851a6cc",
      "metadata": {
        "id": "1851a6cc"
      },
      "outputs": [],
      "source": [
        "df['FastCharge_KmH']=df['FastCharge_KmH'].str.replace('-','0')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 256,
      "id": "7e31f113",
      "metadata": {
        "id": "7e31f113"
      },
      "outputs": [],
      "source": [
        "df['FastCharge_KmH']=df['FastCharge_KmH'].astype(float)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 257,
      "id": "56833f1c",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "56833f1c",
        "outputId": "1583ae1e-0e82-46ed-d1f1-857a9fe40449"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "434.56310679611653"
            ]
          },
          "metadata": {},
          "execution_count": 257
        }
      ],
      "source": [
        "df['FastCharge_KmH'].mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 258,
      "id": "f6924094",
      "metadata": {
        "id": "f6924094"
      },
      "outputs": [],
      "source": [
        "df['FastCharge_KmH']=df['FastCharge_KmH'].replace(0, 434.56)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 259,
      "id": "9a5c32cf",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9a5c32cf",
        "outputId": "c0c1fb40-cf59-4b50-9213-e5ae1920470f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([940.  , 250.  , 620.  , 560.  , 190.  , 220.  , 420.  , 650.  ,\n",
              "       540.  , 440.  , 230.  , 380.  , 210.  , 590.  , 780.  , 170.  ,\n",
              "       260.  , 930.  , 850.  , 910.  , 490.  , 470.  , 270.  , 450.  ,\n",
              "       350.  , 710.  , 240.  , 390.  , 570.  , 610.  , 340.  , 730.  ,\n",
              "       920.  , 434.56, 550.  , 900.  , 520.  , 430.  , 890.  , 410.  ,\n",
              "       770.  , 460.  , 360.  , 810.  , 480.  , 290.  , 330.  , 740.  ,\n",
              "       510.  , 320.  , 500.  ])"
            ]
          },
          "metadata": {},
          "execution_count": 259
        }
      ],
      "source": [
        "df['FastCharge_KmH'].unique()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "378839cf",
      "metadata": {
        "id": "378839cf"
      },
      "source": [
        "# # # Droping Brand and Model name of Company Because we don't need these features for our analysis"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 260,
      "id": "a3c4771b",
      "metadata": {
        "id": "a3c4771b"
      },
      "outputs": [],
      "source": [
        "df=df.drop(['Brand','Model'],axis=1)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 261,
      "id": "80d79ee3",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "80d79ee3",
        "outputId": "f337214c-65d7-47d1-9d75-7eb166ed8d1b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     AccelSec  TopSpeed_KmH  Range_Km  Efficiency_WhKm  FastCharge_KmH  \\\n",
              "0         4.6           233       450              161           940.0   \n",
              "1        10.0           160       270              167           250.0   \n",
              "2         4.7           210       400              181           620.0   \n",
              "3         6.8           180       360              206           560.0   \n",
              "4         9.5           145       170              168           190.0   \n",
              "..        ...           ...       ...              ...             ...   \n",
              "98        7.5           160       330              191           440.0   \n",
              "99        4.5           210       335              258           540.0   \n",
              "100       5.9           200       325              194           440.0   \n",
              "101       5.1           200       375              232           450.0   \n",
              "102       7.5           190       400              238           480.0   \n",
              "\n",
              "    RapidCharge PowerTrain    PlugType  BodyStyle Segment  Seats  PriceEuro  \n",
              "0           Yes        AWD  Type 2 CCS      Sedan       D      5      55480  \n",
              "1           Yes        RWD  Type 2 CCS  Hatchback       C      5      30000  \n",
              "2           Yes        AWD  Type 2 CCS   Liftback       D      5      56440  \n",
              "3           Yes        RWD  Type 2 CCS        SUV       D      5      68040  \n",
              "4           Yes        RWD  Type 2 CCS  Hatchback       B      4      32997  \n",
              "..          ...        ...         ...        ...     ...    ...        ...  \n",
              "98          Yes        FWD  Type 2 CCS  Hatchback       C      5      45000  \n",
              "99          Yes        AWD  Type 2 CCS        SUV       E      5      96050  \n",
              "100         Yes        AWD  Type 2 CCS  Hatchback       C      5      50000  \n",
              "101         Yes        AWD  Type 2 CCS  Hatchback       C      5      65000  \n",
              "102         Yes        AWD  Type 2 CCS        SUV       E      5      62000  \n",
              "\n",
              "[103 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-01d9f186-5546-484d-a227-cd12d0999719\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AccelSec</th>\n",
              "      <th>TopSpeed_KmH</th>\n",
              "      <th>Range_Km</th>\n",
              "      <th>Efficiency_WhKm</th>\n",
              "      <th>FastCharge_KmH</th>\n",
              "      <th>RapidCharge</th>\n",
              "      <th>PowerTrain</th>\n",
              "      <th>PlugType</th>\n",
              "      <th>BodyStyle</th>\n",
              "      <th>Segment</th>\n",
              "      <th>Seats</th>\n",
              "      <th>PriceEuro</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>4.6</td>\n",
              "      <td>233</td>\n",
              "      <td>450</td>\n",
              "      <td>161</td>\n",
              "      <td>940.0</td>\n",
              "      <td>Yes</td>\n",
              "      <td>AWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>Sedan</td>\n",
              "      <td>D</td>\n",
              "      <td>5</td>\n",
              "      <td>55480</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10.0</td>\n",
              "      <td>160</td>\n",
              "      <td>270</td>\n",
              "      <td>167</td>\n",
              "      <td>250.0</td>\n",
              "      <td>Yes</td>\n",
              "      <td>RWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>Hatchback</td>\n",
              "      <td>C</td>\n",
              "      <td>5</td>\n",
              "      <td>30000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4.7</td>\n",
              "      <td>210</td>\n",
              "      <td>400</td>\n",
              "      <td>181</td>\n",
              "      <td>620.0</td>\n",
              "      <td>Yes</td>\n",
              "      <td>AWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>Liftback</td>\n",
              "      <td>D</td>\n",
              "      <td>5</td>\n",
              "      <td>56440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>6.8</td>\n",
              "      <td>180</td>\n",
              "      <td>360</td>\n",
              "      <td>206</td>\n",
              "      <td>560.0</td>\n",
              "      <td>Yes</td>\n",
              "      <td>RWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>SUV</td>\n",
              "      <td>D</td>\n",
              "      <td>5</td>\n",
              "      <td>68040</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>9.5</td>\n",
              "      <td>145</td>\n",
              "      <td>170</td>\n",
              "      <td>168</td>\n",
              "      <td>190.0</td>\n",
              "      <td>Yes</td>\n",
              "      <td>RWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>Hatchback</td>\n",
              "      <td>B</td>\n",
              "      <td>4</td>\n",
              "      <td>32997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>7.5</td>\n",
              "      <td>160</td>\n",
              "      <td>330</td>\n",
              "      <td>191</td>\n",
              "      <td>440.0</td>\n",
              "      <td>Yes</td>\n",
              "      <td>FWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>Hatchback</td>\n",
              "      <td>C</td>\n",
              "      <td>5</td>\n",
              "      <td>45000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>4.5</td>\n",
              "      <td>210</td>\n",
              "      <td>335</td>\n",
              "      <td>258</td>\n",
              "      <td>540.0</td>\n",
              "      <td>Yes</td>\n",
              "      <td>AWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>SUV</td>\n",
              "      <td>E</td>\n",
              "      <td>5</td>\n",
              "      <td>96050</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>5.9</td>\n",
              "      <td>200</td>\n",
              "      <td>325</td>\n",
              "      <td>194</td>\n",
              "      <td>440.0</td>\n",
              "      <td>Yes</td>\n",
              "      <td>AWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>Hatchback</td>\n",
              "      <td>C</td>\n",
              "      <td>5</td>\n",
              "      <td>50000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101</th>\n",
              "      <td>5.1</td>\n",
              "      <td>200</td>\n",
              "      <td>375</td>\n",
              "      <td>232</td>\n",
              "      <td>450.0</td>\n",
              "      <td>Yes</td>\n",
              "      <td>AWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>Hatchback</td>\n",
              "      <td>C</td>\n",
              "      <td>5</td>\n",
              "      <td>65000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>7.5</td>\n",
              "      <td>190</td>\n",
              "      <td>400</td>\n",
              "      <td>238</td>\n",
              "      <td>480.0</td>\n",
              "      <td>Yes</td>\n",
              "      <td>AWD</td>\n",
              "      <td>Type 2 CCS</td>\n",
              "      <td>SUV</td>\n",
              "      <td>E</td>\n",
              "      <td>5</td>\n",
              "      <td>62000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>103 rows × 12 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-01d9f186-5546-484d-a227-cd12d0999719')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-01d9f186-5546-484d-a227-cd12d0999719 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-01d9f186-5546-484d-a227-cd12d0999719');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 261
        }
      ],
      "source": [
        "df"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "6a1f96df",
      "metadata": {
        "id": "6a1f96df"
      },
      "source": [
        "# EDA"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 262,
      "id": "9707b0ac",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "9707b0ac",
        "outputId": "0c5f2694-175c-42b7-fdaa-53f2af058999"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1260x1260 with 56 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "#Create a distribution plot for rating\n",
        "sns.pairplot(df)\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 263,
      "id": "825ace3e",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 411
        },
        "id": "825ace3e",
        "outputId": "b93e8d20-1834-4dfa-e731-6d821f7e5ef8"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 648x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#Plotting a pie chart\n",
        "plt.figure(figsize=[9,7])\n",
        "df['RapidCharge'].value_counts().plot.pie(autopct='%.0f%%')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 264,
      "id": "c287098b",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 411
        },
        "id": "c287098b",
        "outputId": "2495524a-ef38-42f7-cde1-3379dfe347d9"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 648x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#Plotting a pie chart\n",
        "plt.figure(figsize=[9,7])\n",
        "df['Segment'].value_counts().plot.pie(autopct='%.0f%%')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 265,
      "id": "d1a48ef1",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 411
        },
        "id": "d1a48ef1",
        "outputId": "e422c2c7-e8c0-4621-bbcd-7d084a4fa268"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 648x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "#Plotting a pie chart\n",
        "plt.figure(figsize=[9,7])\n",
        "df['PlugType'].value_counts().plot.pie(autopct='%.0f%%')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.boxplot(x=df['TopSpeed_KmH'])\n",
        "plt.show()\n",
        "def convert(x):\n",
        "     if x<160:\n",
        "       return \"Low\"\n",
        "     elif x>=160 and x<190:\n",
        "       return \"Medium\"\n",
        "     else:\n",
        "       return \"High\"\n",
        "converted_TopSpeed=df['TopSpeed_KmH'].apply(convert)\n",
        "sns.countplot(x=converted_TopSpeed)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 543
        },
        "id": "AP8D9_sCn9jW",
        "outputId": "a025e995-b88e-4929-cb87-3b8127231bab"
      },
      "id": "AP8D9_sCn9jW",
      "execution_count": 266,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.boxplot(x=df['Range_Km'])\n",
        "plt.show()\n",
        "def convert1(x):\n",
        "     if x<250:\n",
        "       return \"Low\"\n",
        "     elif x>=250 and x<400:\n",
        "       return \"Medium\"\n",
        "     else:\n",
        "       return \"High\"\n",
        "converted_Range=df['Range_Km'].apply(convert1)\n",
        "sns.countplot(converted_Range)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 598
        },
        "id": "wGH8p-kB4WCC",
        "outputId": "2c767a07-c680-46c7-fe16-5e7eabcb7842"
      },
      "id": "wGH8p-kB4WCC",
      "execution_count": 267,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.boxplot(x=df['Efficiency_WhKm'])\n",
        "plt.show()\n",
        "def convert2(x):\n",
        "     if x<170:\n",
        "       return \"Low\"\n",
        "     elif x>=170 and x<200:\n",
        "       return \"Medium\"\n",
        "     else:\n",
        "       return \"High\"\n",
        "converted_Eff=df['Efficiency_WhKm'].apply(convert2)\n",
        "sns.countplot(converted_Eff)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 598
        },
        "id": "SeKUTaP05a1c",
        "outputId": "b7192391-131c-45bb-8292-a1a2fcb79a56"
      },
      "id": "SeKUTaP05a1c",
      "execution_count": 268,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.boxplot(x=df['AccelSec'])\n",
        "plt.show()\n",
        "def convert3(x):\n",
        "     if x<6:\n",
        "       return \"Low\"\n",
        "     elif x>=6 and x<8:\n",
        "       return \"Medium\"\n",
        "     else:\n",
        "       return \"High\"\n",
        "converted_Acc=df['AccelSec'].apply(convert3)\n",
        "sns.countplot(converted_Acc)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 596
        },
        "id": "8-wgt-Py6Tzu",
        "outputId": "a2751d00-c107-4a16-a1d0-b87734bb01dc"
      },
      "id": "8-wgt-Py6Tzu",
      "execution_count": 269,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "  FutureWarning\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 270,
      "id": "fb8b11c9",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fb8b11c9",
        "outputId": "73caaec2-d7ba-4027-8ee3-4170f25dec33"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Type 2 CCS        90\n",
              "Type 2             9\n",
              "Type 2 CHAdeMO     3\n",
              "Type 1 CHAdeMO     1\n",
              "Name: PlugType, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 270
        }
      ],
      "source": [
        "df['PlugType'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 271,
      "id": "6b53413a",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6b53413a",
        "outputId": "1468191a-1da2-4226-c2bc-c5f9238687eb"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Yes    98\n",
              "No      5\n",
              "Name: RapidCharge, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 271
        }
      ],
      "source": [
        "df['RapidCharge'].value_counts()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "34224c73",
      "metadata": {
        "id": "34224c73"
      },
      "source": [
        "# Since PlugType and RapidCharge are imbalanced attributes we drop these attributes"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 272,
      "id": "b3aeed12",
      "metadata": {
        "id": "b3aeed12"
      },
      "outputs": [],
      "source": [
        "from sklearn.preprocessing import OrdinalEncoder"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 273,
      "id": "fe7f6375",
      "metadata": {
        "id": "fe7f6375"
      },
      "outputs": [],
      "source": [
        "\n",
        "oe2=OrdinalEncoder(categories=[['AWD', 'RWD', 'FWD']])\n",
        "oe4=OrdinalEncoder(categories=[['Sedan', 'Hatchback', 'Liftback', 'SUV', 'Pickup', 'MPV', 'Cabrio','SPV', 'Station']])\n",
        "oe5=OrdinalEncoder(categories=[['D', 'C', 'B', 'F', 'A', 'E', 'N', 'S']])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 274,
      "id": "79a87763",
      "metadata": {
        "id": "79a87763"
      },
      "outputs": [],
      "source": [
        "\n",
        "#df['PowerTrain']=oe2.fit_transform(df[['PowerTrain']])\n",
        "#df['BodyStyle']=oe4.fit_transform(df[['BodyStyle']])\n",
        "#df['Segment']=oe5.fit_transform(df[['Segment']])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 275,
      "id": "460704e9",
      "metadata": {
        "id": "460704e9"
      },
      "outputs": [],
      "source": [
        "df = df.drop(columns=['RapidCharge','PlugType'])"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.get_dummies(df)\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "e1U3vLIkzuiM",
        "outputId": "13a79827-854e-47db-c9e6-e94e6fc81b3e"
      },
      "id": "e1U3vLIkzuiM",
      "execution_count": 276,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     AccelSec  TopSpeed_KmH  Range_Km  Efficiency_WhKm  FastCharge_KmH  Seats  \\\n",
              "0         4.6           233       450              161           940.0      5   \n",
              "1        10.0           160       270              167           250.0      5   \n",
              "2         4.7           210       400              181           620.0      5   \n",
              "3         6.8           180       360              206           560.0      5   \n",
              "4         9.5           145       170              168           190.0      4   \n",
              "..        ...           ...       ...              ...             ...    ...   \n",
              "98        7.5           160       330              191           440.0      5   \n",
              "99        4.5           210       335              258           540.0      5   \n",
              "100       5.9           200       325              194           440.0      5   \n",
              "101       5.1           200       375              232           450.0      5   \n",
              "102       7.5           190       400              238           480.0      5   \n",
              "\n",
              "     PriceEuro  PowerTrain_AWD  PowerTrain_FWD  PowerTrain_RWD  ...  \\\n",
              "0        55480               1               0               0  ...   \n",
              "1        30000               0               0               1  ...   \n",
              "2        56440               1               0               0  ...   \n",
              "3        68040               0               0               1  ...   \n",
              "4        32997               0               0               1  ...   \n",
              "..         ...             ...             ...             ...  ...   \n",
              "98       45000               0               1               0  ...   \n",
              "99       96050               1               0               0  ...   \n",
              "100      50000               1               0               0  ...   \n",
              "101      65000               1               0               0  ...   \n",
              "102      62000               1               0               0  ...   \n",
              "\n",
              "     BodyStyle_Sedan  BodyStyle_Station  Segment_A  Segment_B  Segment_C  \\\n",
              "0                  1                  0          0          0          0   \n",
              "1                  0                  0          0          0          1   \n",
              "2                  0                  0          0          0          0   \n",
              "3                  0                  0          0          0          0   \n",
              "4                  0                  0          0          1          0   \n",
              "..               ...                ...        ...        ...        ...   \n",
              "98                 0                  0          0          0          1   \n",
              "99                 0                  0          0          0          0   \n",
              "100                0                  0          0          0          1   \n",
              "101                0                  0          0          0          1   \n",
              "102                0                  0          0          0          0   \n",
              "\n",
              "     Segment_D  Segment_E  Segment_F  Segment_N  Segment_S  \n",
              "0            1          0          0          0          0  \n",
              "1            0          0          0          0          0  \n",
              "2            1          0          0          0          0  \n",
              "3            1          0          0          0          0  \n",
              "4            0          0          0          0          0  \n",
              "..         ...        ...        ...        ...        ...  \n",
              "98           0          0          0          0          0  \n",
              "99           0          1          0          0          0  \n",
              "100          0          0          0          0          0  \n",
              "101          0          0          0          0          0  \n",
              "102          0          1          0          0          0  \n",
              "\n",
              "[103 rows x 27 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8f9bc37e-9f74-4aa1-9eab-c73260f8f8df\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AccelSec</th>\n",
              "      <th>TopSpeed_KmH</th>\n",
              "      <th>Range_Km</th>\n",
              "      <th>Efficiency_WhKm</th>\n",
              "      <th>FastCharge_KmH</th>\n",
              "      <th>Seats</th>\n",
              "      <th>PriceEuro</th>\n",
              "      <th>PowerTrain_AWD</th>\n",
              "      <th>PowerTrain_FWD</th>\n",
              "      <th>PowerTrain_RWD</th>\n",
              "      <th>...</th>\n",
              "      <th>BodyStyle_Sedan</th>\n",
              "      <th>BodyStyle_Station</th>\n",
              "      <th>Segment_A</th>\n",
              "      <th>Segment_B</th>\n",
              "      <th>Segment_C</th>\n",
              "      <th>Segment_D</th>\n",
              "      <th>Segment_E</th>\n",
              "      <th>Segment_F</th>\n",
              "      <th>Segment_N</th>\n",
              "      <th>Segment_S</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>4.6</td>\n",
              "      <td>233</td>\n",
              "      <td>450</td>\n",
              "      <td>161</td>\n",
              "      <td>940.0</td>\n",
              "      <td>5</td>\n",
              "      <td>55480</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10.0</td>\n",
              "      <td>160</td>\n",
              "      <td>270</td>\n",
              "      <td>167</td>\n",
              "      <td>250.0</td>\n",
              "      <td>5</td>\n",
              "      <td>30000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4.7</td>\n",
              "      <td>210</td>\n",
              "      <td>400</td>\n",
              "      <td>181</td>\n",
              "      <td>620.0</td>\n",
              "      <td>5</td>\n",
              "      <td>56440</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>6.8</td>\n",
              "      <td>180</td>\n",
              "      <td>360</td>\n",
              "      <td>206</td>\n",
              "      <td>560.0</td>\n",
              "      <td>5</td>\n",
              "      <td>68040</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>9.5</td>\n",
              "      <td>145</td>\n",
              "      <td>170</td>\n",
              "      <td>168</td>\n",
              "      <td>190.0</td>\n",
              "      <td>4</td>\n",
              "      <td>32997</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>7.5</td>\n",
              "      <td>160</td>\n",
              "      <td>330</td>\n",
              "      <td>191</td>\n",
              "      <td>440.0</td>\n",
              "      <td>5</td>\n",
              "      <td>45000</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>4.5</td>\n",
              "      <td>210</td>\n",
              "      <td>335</td>\n",
              "      <td>258</td>\n",
              "      <td>540.0</td>\n",
              "      <td>5</td>\n",
              "      <td>96050</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>5.9</td>\n",
              "      <td>200</td>\n",
              "      <td>325</td>\n",
              "      <td>194</td>\n",
              "      <td>440.0</td>\n",
              "      <td>5</td>\n",
              "      <td>50000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101</th>\n",
              "      <td>5.1</td>\n",
              "      <td>200</td>\n",
              "      <td>375</td>\n",
              "      <td>232</td>\n",
              "      <td>450.0</td>\n",
              "      <td>5</td>\n",
              "      <td>65000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>7.5</td>\n",
              "      <td>190</td>\n",
              "      <td>400</td>\n",
              "      <td>238</td>\n",
              "      <td>480.0</td>\n",
              "      <td>5</td>\n",
              "      <td>62000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>103 rows × 27 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8f9bc37e-9f74-4aa1-9eab-c73260f8f8df')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8f9bc37e-9f74-4aa1-9eab-c73260f8f8df button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8f9bc37e-9f74-4aa1-9eab-c73260f8f8df');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 276
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "WDQMyeQtzuON"
      },
      "id": "WDQMyeQtzuON",
      "execution_count": 276,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 277,
      "id": "f7001b52",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f7001b52",
        "outputId": "8c01faef-8f99-4026-8193-fc7cc80c616d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 103 entries, 0 to 102\n",
            "Data columns (total 27 columns):\n",
            " #   Column               Non-Null Count  Dtype  \n",
            "---  ------               --------------  -----  \n",
            " 0   AccelSec             103 non-null    float64\n",
            " 1   TopSpeed_KmH         103 non-null    int64  \n",
            " 2   Range_Km             103 non-null    int64  \n",
            " 3   Efficiency_WhKm      103 non-null    int64  \n",
            " 4   FastCharge_KmH       103 non-null    float64\n",
            " 5   Seats                103 non-null    int64  \n",
            " 6   PriceEuro            103 non-null    int64  \n",
            " 7   PowerTrain_AWD       103 non-null    uint8  \n",
            " 8   PowerTrain_FWD       103 non-null    uint8  \n",
            " 9   PowerTrain_RWD       103 non-null    uint8  \n",
            " 10  BodyStyle_Cabrio     103 non-null    uint8  \n",
            " 11  BodyStyle_Hatchback  103 non-null    uint8  \n",
            " 12  BodyStyle_Liftback   103 non-null    uint8  \n",
            " 13  BodyStyle_MPV        103 non-null    uint8  \n",
            " 14  BodyStyle_Pickup     103 non-null    uint8  \n",
            " 15  BodyStyle_SPV        103 non-null    uint8  \n",
            " 16  BodyStyle_SUV        103 non-null    uint8  \n",
            " 17  BodyStyle_Sedan      103 non-null    uint8  \n",
            " 18  BodyStyle_Station    103 non-null    uint8  \n",
            " 19  Segment_A            103 non-null    uint8  \n",
            " 20  Segment_B            103 non-null    uint8  \n",
            " 21  Segment_C            103 non-null    uint8  \n",
            " 22  Segment_D            103 non-null    uint8  \n",
            " 23  Segment_E            103 non-null    uint8  \n",
            " 24  Segment_F            103 non-null    uint8  \n",
            " 25  Segment_N            103 non-null    uint8  \n",
            " 26  Segment_S            103 non-null    uint8  \n",
            "dtypes: float64(2), int64(5), uint8(20)\n",
            "memory usage: 7.8 KB\n"
          ]
        }
      ],
      "source": [
        "df.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 278,
      "id": "b5f4875e",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "b5f4875e",
        "outputId": "d20f70fa-48d8-4017-debc-852bb2013586"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     AccelSec  TopSpeed_KmH  Range_Km  Efficiency_WhKm  FastCharge_KmH  Seats  \\\n",
              "0         4.6           233       450              161           940.0      5   \n",
              "1        10.0           160       270              167           250.0      5   \n",
              "2         4.7           210       400              181           620.0      5   \n",
              "3         6.8           180       360              206           560.0      5   \n",
              "4         9.5           145       170              168           190.0      4   \n",
              "..        ...           ...       ...              ...             ...    ...   \n",
              "98        7.5           160       330              191           440.0      5   \n",
              "99        4.5           210       335              258           540.0      5   \n",
              "100       5.9           200       325              194           440.0      5   \n",
              "101       5.1           200       375              232           450.0      5   \n",
              "102       7.5           190       400              238           480.0      5   \n",
              "\n",
              "     PriceEuro  PowerTrain_AWD  PowerTrain_FWD  PowerTrain_RWD  ...  \\\n",
              "0        55480               1               0               0  ...   \n",
              "1        30000               0               0               1  ...   \n",
              "2        56440               1               0               0  ...   \n",
              "3        68040               0               0               1  ...   \n",
              "4        32997               0               0               1  ...   \n",
              "..         ...             ...             ...             ...  ...   \n",
              "98       45000               0               1               0  ...   \n",
              "99       96050               1               0               0  ...   \n",
              "100      50000               1               0               0  ...   \n",
              "101      65000               1               0               0  ...   \n",
              "102      62000               1               0               0  ...   \n",
              "\n",
              "     BodyStyle_Sedan  BodyStyle_Station  Segment_A  Segment_B  Segment_C  \\\n",
              "0                  1                  0          0          0          0   \n",
              "1                  0                  0          0          0          1   \n",
              "2                  0                  0          0          0          0   \n",
              "3                  0                  0          0          0          0   \n",
              "4                  0                  0          0          1          0   \n",
              "..               ...                ...        ...        ...        ...   \n",
              "98                 0                  0          0          0          1   \n",
              "99                 0                  0          0          0          0   \n",
              "100                0                  0          0          0          1   \n",
              "101                0                  0          0          0          1   \n",
              "102                0                  0          0          0          0   \n",
              "\n",
              "     Segment_D  Segment_E  Segment_F  Segment_N  Segment_S  \n",
              "0            1          0          0          0          0  \n",
              "1            0          0          0          0          0  \n",
              "2            1          0          0          0          0  \n",
              "3            1          0          0          0          0  \n",
              "4            0          0          0          0          0  \n",
              "..         ...        ...        ...        ...        ...  \n",
              "98           0          0          0          0          0  \n",
              "99           0          1          0          0          0  \n",
              "100          0          0          0          0          0  \n",
              "101          0          0          0          0          0  \n",
              "102          0          1          0          0          0  \n",
              "\n",
              "[103 rows x 27 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-61252967-cfb7-4362-9939-ed53afe56e57\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AccelSec</th>\n",
              "      <th>TopSpeed_KmH</th>\n",
              "      <th>Range_Km</th>\n",
              "      <th>Efficiency_WhKm</th>\n",
              "      <th>FastCharge_KmH</th>\n",
              "      <th>Seats</th>\n",
              "      <th>PriceEuro</th>\n",
              "      <th>PowerTrain_AWD</th>\n",
              "      <th>PowerTrain_FWD</th>\n",
              "      <th>PowerTrain_RWD</th>\n",
              "      <th>...</th>\n",
              "      <th>BodyStyle_Sedan</th>\n",
              "      <th>BodyStyle_Station</th>\n",
              "      <th>Segment_A</th>\n",
              "      <th>Segment_B</th>\n",
              "      <th>Segment_C</th>\n",
              "      <th>Segment_D</th>\n",
              "      <th>Segment_E</th>\n",
              "      <th>Segment_F</th>\n",
              "      <th>Segment_N</th>\n",
              "      <th>Segment_S</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>4.6</td>\n",
              "      <td>233</td>\n",
              "      <td>450</td>\n",
              "      <td>161</td>\n",
              "      <td>940.0</td>\n",
              "      <td>5</td>\n",
              "      <td>55480</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10.0</td>\n",
              "      <td>160</td>\n",
              "      <td>270</td>\n",
              "      <td>167</td>\n",
              "      <td>250.0</td>\n",
              "      <td>5</td>\n",
              "      <td>30000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4.7</td>\n",
              "      <td>210</td>\n",
              "      <td>400</td>\n",
              "      <td>181</td>\n",
              "      <td>620.0</td>\n",
              "      <td>5</td>\n",
              "      <td>56440</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>6.8</td>\n",
              "      <td>180</td>\n",
              "      <td>360</td>\n",
              "      <td>206</td>\n",
              "      <td>560.0</td>\n",
              "      <td>5</td>\n",
              "      <td>68040</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>9.5</td>\n",
              "      <td>145</td>\n",
              "      <td>170</td>\n",
              "      <td>168</td>\n",
              "      <td>190.0</td>\n",
              "      <td>4</td>\n",
              "      <td>32997</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>7.5</td>\n",
              "      <td>160</td>\n",
              "      <td>330</td>\n",
              "      <td>191</td>\n",
              "      <td>440.0</td>\n",
              "      <td>5</td>\n",
              "      <td>45000</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>4.5</td>\n",
              "      <td>210</td>\n",
              "      <td>335</td>\n",
              "      <td>258</td>\n",
              "      <td>540.0</td>\n",
              "      <td>5</td>\n",
              "      <td>96050</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>5.9</td>\n",
              "      <td>200</td>\n",
              "      <td>325</td>\n",
              "      <td>194</td>\n",
              "      <td>440.0</td>\n",
              "      <td>5</td>\n",
              "      <td>50000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101</th>\n",
              "      <td>5.1</td>\n",
              "      <td>200</td>\n",
              "      <td>375</td>\n",
              "      <td>232</td>\n",
              "      <td>450.0</td>\n",
              "      <td>5</td>\n",
              "      <td>65000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>7.5</td>\n",
              "      <td>190</td>\n",
              "      <td>400</td>\n",
              "      <td>238</td>\n",
              "      <td>480.0</td>\n",
              "      <td>5</td>\n",
              "      <td>62000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>103 rows × 27 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61252967-cfb7-4362-9939-ed53afe56e57')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-61252967-cfb7-4362-9939-ed53afe56e57 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-61252967-cfb7-4362-9939-ed53afe56e57');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 278
        }
      ],
      "source": [
        "df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 279,
      "id": "37b8aff9",
      "metadata": {
        "id": "37b8aff9"
      },
      "outputs": [],
      "source": [
        "df=df.astype(float)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 280,
      "id": "841dba5c",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "841dba5c",
        "outputId": "0275c142-c4ab-4949-fa33-2975c0ee439b"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 103 entries, 0 to 102\n",
            "Data columns (total 27 columns):\n",
            " #   Column               Non-Null Count  Dtype  \n",
            "---  ------               --------------  -----  \n",
            " 0   AccelSec             103 non-null    float64\n",
            " 1   TopSpeed_KmH         103 non-null    float64\n",
            " 2   Range_Km             103 non-null    float64\n",
            " 3   Efficiency_WhKm      103 non-null    float64\n",
            " 4   FastCharge_KmH       103 non-null    float64\n",
            " 5   Seats                103 non-null    float64\n",
            " 6   PriceEuro            103 non-null    float64\n",
            " 7   PowerTrain_AWD       103 non-null    float64\n",
            " 8   PowerTrain_FWD       103 non-null    float64\n",
            " 9   PowerTrain_RWD       103 non-null    float64\n",
            " 10  BodyStyle_Cabrio     103 non-null    float64\n",
            " 11  BodyStyle_Hatchback  103 non-null    float64\n",
            " 12  BodyStyle_Liftback   103 non-null    float64\n",
            " 13  BodyStyle_MPV        103 non-null    float64\n",
            " 14  BodyStyle_Pickup     103 non-null    float64\n",
            " 15  BodyStyle_SPV        103 non-null    float64\n",
            " 16  BodyStyle_SUV        103 non-null    float64\n",
            " 17  BodyStyle_Sedan      103 non-null    float64\n",
            " 18  BodyStyle_Station    103 non-null    float64\n",
            " 19  Segment_A            103 non-null    float64\n",
            " 20  Segment_B            103 non-null    float64\n",
            " 21  Segment_C            103 non-null    float64\n",
            " 22  Segment_D            103 non-null    float64\n",
            " 23  Segment_E            103 non-null    float64\n",
            " 24  Segment_F            103 non-null    float64\n",
            " 25  Segment_N            103 non-null    float64\n",
            " 26  Segment_S            103 non-null    float64\n",
            "dtypes: float64(27)\n",
            "memory usage: 21.9 KB\n"
          ]
        }
      ],
      "source": [
        "df.info()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 281,
      "id": "04f015e8",
      "metadata": {
        "id": "04f015e8"
      },
      "outputs": [],
      "source": [
        "cols_to_norm = ['AccelSec','TopSpeed_KmH','Range_Km','Efficiency_WhKm','FastCharge_KmH','PriceEuro']\n",
        "df_prev=df.copy()\n",
        "df[cols_to_norm] = df[cols_to_norm].apply(lambda x: (x - x.min()) / (x.max() - x.min()))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 282,
      "id": "c269783a",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "c269783a",
        "outputId": "d8e6d051-70fe-4c03-e616-983cc1992bf8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     AccelSec  TopSpeed_KmH  Range_Km  Efficiency_WhKm  FastCharge_KmH  Seats  \\\n",
              "0    0.123153      0.383275  0.405714         0.337278        1.000000    5.0   \n",
              "1    0.389163      0.128920  0.200000         0.372781        0.103896    5.0   \n",
              "2    0.128079      0.303136  0.348571         0.455621        0.584416    5.0   \n",
              "3    0.231527      0.198606  0.302857         0.603550        0.506494    5.0   \n",
              "4    0.364532      0.076655  0.085714         0.378698        0.025974    4.0   \n",
              "..        ...           ...       ...              ...             ...    ...   \n",
              "98   0.266010      0.128920  0.268571         0.514793        0.350649    5.0   \n",
              "99   0.118227      0.303136  0.274286         0.911243        0.480519    5.0   \n",
              "100  0.187192      0.268293  0.262857         0.532544        0.350649    5.0   \n",
              "101  0.147783      0.268293  0.320000         0.757396        0.363636    5.0   \n",
              "102  0.266010      0.233449  0.348571         0.792899        0.402597    5.0   \n",
              "\n",
              "     PriceEuro  PowerTrain_AWD  PowerTrain_FWD  PowerTrain_RWD  ...  \\\n",
              "0     0.181407             1.0             0.0             0.0  ...   \n",
              "1     0.050654             0.0             0.0             1.0  ...   \n",
              "2     0.186334             1.0             0.0             0.0  ...   \n",
              "3     0.245860             0.0             0.0             1.0  ...   \n",
              "4     0.066033             0.0             0.0             1.0  ...   \n",
              "..         ...             ...             ...             ...  ...   \n",
              "98    0.127628             0.0             1.0             0.0  ...   \n",
              "99    0.389596             1.0             0.0             0.0  ...   \n",
              "100   0.153286             1.0             0.0             0.0  ...   \n",
              "101   0.230260             1.0             0.0             0.0  ...   \n",
              "102   0.214865             1.0             0.0             0.0  ...   \n",
              "\n",
              "     BodyStyle_Sedan  BodyStyle_Station  Segment_A  Segment_B  Segment_C  \\\n",
              "0                1.0                0.0        0.0        0.0        0.0   \n",
              "1                0.0                0.0        0.0        0.0        1.0   \n",
              "2                0.0                0.0        0.0        0.0        0.0   \n",
              "3                0.0                0.0        0.0        0.0        0.0   \n",
              "4                0.0                0.0        0.0        1.0        0.0   \n",
              "..               ...                ...        ...        ...        ...   \n",
              "98               0.0                0.0        0.0        0.0        1.0   \n",
              "99               0.0                0.0        0.0        0.0        0.0   \n",
              "100              0.0                0.0        0.0        0.0        1.0   \n",
              "101              0.0                0.0        0.0        0.0        1.0   \n",
              "102              0.0                0.0        0.0        0.0        0.0   \n",
              "\n",
              "     Segment_D  Segment_E  Segment_F  Segment_N  Segment_S  \n",
              "0          1.0        0.0        0.0        0.0        0.0  \n",
              "1          0.0        0.0        0.0        0.0        0.0  \n",
              "2          1.0        0.0        0.0        0.0        0.0  \n",
              "3          1.0        0.0        0.0        0.0        0.0  \n",
              "4          0.0        0.0        0.0        0.0        0.0  \n",
              "..         ...        ...        ...        ...        ...  \n",
              "98         0.0        0.0        0.0        0.0        0.0  \n",
              "99         0.0        1.0        0.0        0.0        0.0  \n",
              "100        0.0        0.0        0.0        0.0        0.0  \n",
              "101        0.0        0.0        0.0        0.0        0.0  \n",
              "102        0.0        1.0        0.0        0.0        0.0  \n",
              "\n",
              "[103 rows x 27 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cf3c8ec1-8e8a-4998-b77d-793b9fe69c7c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AccelSec</th>\n",
              "      <th>TopSpeed_KmH</th>\n",
              "      <th>Range_Km</th>\n",
              "      <th>Efficiency_WhKm</th>\n",
              "      <th>FastCharge_KmH</th>\n",
              "      <th>Seats</th>\n",
              "      <th>PriceEuro</th>\n",
              "      <th>PowerTrain_AWD</th>\n",
              "      <th>PowerTrain_FWD</th>\n",
              "      <th>PowerTrain_RWD</th>\n",
              "      <th>...</th>\n",
              "      <th>BodyStyle_Sedan</th>\n",
              "      <th>BodyStyle_Station</th>\n",
              "      <th>Segment_A</th>\n",
              "      <th>Segment_B</th>\n",
              "      <th>Segment_C</th>\n",
              "      <th>Segment_D</th>\n",
              "      <th>Segment_E</th>\n",
              "      <th>Segment_F</th>\n",
              "      <th>Segment_N</th>\n",
              "      <th>Segment_S</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.123153</td>\n",
              "      <td>0.383275</td>\n",
              "      <td>0.405714</td>\n",
              "      <td>0.337278</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.181407</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.389163</td>\n",
              "      <td>0.128920</td>\n",
              "      <td>0.200000</td>\n",
              "      <td>0.372781</td>\n",
              "      <td>0.103896</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.050654</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.128079</td>\n",
              "      <td>0.303136</td>\n",
              "      <td>0.348571</td>\n",
              "      <td>0.455621</td>\n",
              "      <td>0.584416</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.186334</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.231527</td>\n",
              "      <td>0.198606</td>\n",
              "      <td>0.302857</td>\n",
              "      <td>0.603550</td>\n",
              "      <td>0.506494</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.245860</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.364532</td>\n",
              "      <td>0.076655</td>\n",
              "      <td>0.085714</td>\n",
              "      <td>0.378698</td>\n",
              "      <td>0.025974</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.066033</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>0.266010</td>\n",
              "      <td>0.128920</td>\n",
              "      <td>0.268571</td>\n",
              "      <td>0.514793</td>\n",
              "      <td>0.350649</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.127628</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>0.118227</td>\n",
              "      <td>0.303136</td>\n",
              "      <td>0.274286</td>\n",
              "      <td>0.911243</td>\n",
              "      <td>0.480519</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.389596</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>0.187192</td>\n",
              "      <td>0.268293</td>\n",
              "      <td>0.262857</td>\n",
              "      <td>0.532544</td>\n",
              "      <td>0.350649</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.153286</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101</th>\n",
              "      <td>0.147783</td>\n",
              "      <td>0.268293</td>\n",
              "      <td>0.320000</td>\n",
              "      <td>0.757396</td>\n",
              "      <td>0.363636</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.230260</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>0.266010</td>\n",
              "      <td>0.233449</td>\n",
              "      <td>0.348571</td>\n",
              "      <td>0.792899</td>\n",
              "      <td>0.402597</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.214865</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>103 rows × 27 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf3c8ec1-8e8a-4998-b77d-793b9fe69c7c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-cf3c8ec1-8e8a-4998-b77d-793b9fe69c7c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-cf3c8ec1-8e8a-4998-b77d-793b9fe69c7c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 282
        }
      ],
      "source": [
        "df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 283,
      "id": "8610e8d2",
      "metadata": {
        "id": "8610e8d2"
      },
      "outputs": [],
      "source": [
        "from sklearn.cluster import KMeans"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 284,
      "id": "d411f073",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 312
        },
        "id": "d411f073",
        "outputId": "50938331-d806-4014-b7c4-edba33e8e01f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'WCSS')"
            ]
          },
          "metadata": {},
          "execution_count": 284
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "wcss=[]\n",
        "for i in range(1,10):\n",
        "    kmeans = KMeans(i)\n",
        "    kmeans.fit(df)\n",
        "    wcss_iter = kmeans.inertia_\n",
        "    wcss.append(wcss_iter)\n",
        "\n",
        "number_clusters = range(1,10)\n",
        "plt.plot(number_clusters,wcss)\n",
        "plt.title('The Elbow title')\n",
        "plt.xlabel('Number of clusters')\n",
        "plt.ylabel('WCSS')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 285,
      "id": "f5f78b7f",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "f5f78b7f",
        "outputId": "76d99c2f-b933-4895-b9cb-ef21c6599ac6"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "KMeans(n_clusters=5)"
            ]
          },
          "metadata": {},
          "execution_count": 285
        }
      ],
      "source": [
        "kmeanModel = KMeans(n_clusters=5)\n",
        "kmeanModel.fit(df)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 286,
      "id": "3f038f96",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3f038f96",
        "outputId": "145a6a90-b941-40a2-ff34-2aa6e17d1773"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 4, 0, 3, 2, 0, 4, 1, 0, 3, 3, 4, 1, 0, 4, 2, 0, 2, 1, 2, 1, 3,\n",
              "       4, 0, 0, 4, 4, 3, 2, 1, 3, 4, 1, 3, 4, 4, 4, 2, 1, 3, 0, 1, 3, 2,\n",
              "       2, 1, 1, 0, 0, 4, 3, 0, 1, 4, 3, 2, 1, 2, 4, 0, 1, 3, 4, 3, 3, 0,\n",
              "       1, 3, 1, 3, 2, 3, 0, 3, 4, 4, 3, 2, 3, 0, 4, 3, 2, 3, 1, 2, 3, 3,\n",
              "       3, 4, 3, 2, 1, 4, 1, 4, 1, 3, 4, 3, 4, 4, 3], dtype=int32)"
            ]
          },
          "metadata": {},
          "execution_count": 286
        }
      ],
      "source": [
        "identified_clusters = kmeanModel.fit_predict(df)\n",
        "identified_clusters"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 287,
      "id": "55f7c387",
      "metadata": {
        "id": "55f7c387"
      },
      "outputs": [],
      "source": [
        "data_with_clusters = df_prev.copy()\n",
        "data_with_clusters['Clusters'] = identified_clusters "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 288,
      "id": "f0a395c8",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "f0a395c8",
        "outputId": "5f02648e-21da-4008-c403-17bb5e47f108"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     AccelSec  TopSpeed_KmH  Range_Km  Efficiency_WhKm  FastCharge_KmH  Seats  \\\n",
              "0         4.6         233.0     450.0            161.0           940.0    5.0   \n",
              "1        10.0         160.0     270.0            167.0           250.0    5.0   \n",
              "2         4.7         210.0     400.0            181.0           620.0    5.0   \n",
              "3         6.8         180.0     360.0            206.0           560.0    5.0   \n",
              "4         9.5         145.0     170.0            168.0           190.0    4.0   \n",
              "..        ...           ...       ...              ...             ...    ...   \n",
              "98        7.5         160.0     330.0            191.0           440.0    5.0   \n",
              "99        4.5         210.0     335.0            258.0           540.0    5.0   \n",
              "100       5.9         200.0     325.0            194.0           440.0    5.0   \n",
              "101       5.1         200.0     375.0            232.0           450.0    5.0   \n",
              "102       7.5         190.0     400.0            238.0           480.0    5.0   \n",
              "\n",
              "     PriceEuro  PowerTrain_AWD  PowerTrain_FWD  PowerTrain_RWD  ...  \\\n",
              "0      55480.0             1.0             0.0             0.0  ...   \n",
              "1      30000.0             0.0             0.0             1.0  ...   \n",
              "2      56440.0             1.0             0.0             0.0  ...   \n",
              "3      68040.0             0.0             0.0             1.0  ...   \n",
              "4      32997.0             0.0             0.0             1.0  ...   \n",
              "..         ...             ...             ...             ...  ...   \n",
              "98     45000.0             0.0             1.0             0.0  ...   \n",
              "99     96050.0             1.0             0.0             0.0  ...   \n",
              "100    50000.0             1.0             0.0             0.0  ...   \n",
              "101    65000.0             1.0             0.0             0.0  ...   \n",
              "102    62000.0             1.0             0.0             0.0  ...   \n",
              "\n",
              "     BodyStyle_Station  Segment_A  Segment_B  Segment_C  Segment_D  Segment_E  \\\n",
              "0                  0.0        0.0        0.0        0.0        1.0        0.0   \n",
              "1                  0.0        0.0        0.0        1.0        0.0        0.0   \n",
              "2                  0.0        0.0        0.0        0.0        1.0        0.0   \n",
              "3                  0.0        0.0        0.0        0.0        1.0        0.0   \n",
              "4                  0.0        0.0        1.0        0.0        0.0        0.0   \n",
              "..                 ...        ...        ...        ...        ...        ...   \n",
              "98                 0.0        0.0        0.0        1.0        0.0        0.0   \n",
              "99                 0.0        0.0        0.0        0.0        0.0        1.0   \n",
              "100                0.0        0.0        0.0        1.0        0.0        0.0   \n",
              "101                0.0        0.0        0.0        1.0        0.0        0.0   \n",
              "102                0.0        0.0        0.0        0.0        0.0        1.0   \n",
              "\n",
              "     Segment_F  Segment_N  Segment_S  Clusters  \n",
              "0          0.0        0.0        0.0         0  \n",
              "1          0.0        0.0        0.0         4  \n",
              "2          0.0        0.0        0.0         0  \n",
              "3          0.0        0.0        0.0         3  \n",
              "4          0.0        0.0        0.0         2  \n",
              "..         ...        ...        ...       ...  \n",
              "98         0.0        0.0        0.0         4  \n",
              "99         0.0        0.0        0.0         3  \n",
              "100        0.0        0.0        0.0         4  \n",
              "101        0.0        0.0        0.0         4  \n",
              "102        0.0        0.0        0.0         3  \n",
              "\n",
              "[103 rows x 28 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-70261f8f-9d87-45a5-8322-e37504406c38\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AccelSec</th>\n",
              "      <th>TopSpeed_KmH</th>\n",
              "      <th>Range_Km</th>\n",
              "      <th>Efficiency_WhKm</th>\n",
              "      <th>FastCharge_KmH</th>\n",
              "      <th>Seats</th>\n",
              "      <th>PriceEuro</th>\n",
              "      <th>PowerTrain_AWD</th>\n",
              "      <th>PowerTrain_FWD</th>\n",
              "      <th>PowerTrain_RWD</th>\n",
              "      <th>...</th>\n",
              "      <th>BodyStyle_Station</th>\n",
              "      <th>Segment_A</th>\n",
              "      <th>Segment_B</th>\n",
              "      <th>Segment_C</th>\n",
              "      <th>Segment_D</th>\n",
              "      <th>Segment_E</th>\n",
              "      <th>Segment_F</th>\n",
              "      <th>Segment_N</th>\n",
              "      <th>Segment_S</th>\n",
              "      <th>Clusters</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>4.6</td>\n",
              "      <td>233.0</td>\n",
              "      <td>450.0</td>\n",
              "      <td>161.0</td>\n",
              "      <td>940.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>55480.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>10.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>270.0</td>\n",
              "      <td>167.0</td>\n",
              "      <td>250.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>30000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4.7</td>\n",
              "      <td>210.0</td>\n",
              "      <td>400.0</td>\n",
              "      <td>181.0</td>\n",
              "      <td>620.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>56440.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>6.8</td>\n",
              "      <td>180.0</td>\n",
              "      <td>360.0</td>\n",
              "      <td>206.0</td>\n",
              "      <td>560.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>68040.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>9.5</td>\n",
              "      <td>145.0</td>\n",
              "      <td>170.0</td>\n",
              "      <td>168.0</td>\n",
              "      <td>190.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>32997.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>7.5</td>\n",
              "      <td>160.0</td>\n",
              "      <td>330.0</td>\n",
              "      <td>191.0</td>\n",
              "      <td>440.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>45000.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>4.5</td>\n",
              "      <td>210.0</td>\n",
              "      <td>335.0</td>\n",
              "      <td>258.0</td>\n",
              "      <td>540.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>96050.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>5.9</td>\n",
              "      <td>200.0</td>\n",
              "      <td>325.0</td>\n",
              "      <td>194.0</td>\n",
              "      <td>440.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>50000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101</th>\n",
              "      <td>5.1</td>\n",
              "      <td>200.0</td>\n",
              "      <td>375.0</td>\n",
              "      <td>232.0</td>\n",
              "      <td>450.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>65000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>7.5</td>\n",
              "      <td>190.0</td>\n",
              "      <td>400.0</td>\n",
              "      <td>238.0</td>\n",
              "      <td>480.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>62000.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>103 rows × 28 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-70261f8f-9d87-45a5-8322-e37504406c38')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-70261f8f-9d87-45a5-8322-e37504406c38 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-70261f8f-9d87-45a5-8322-e37504406c38');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 288
        }
      ],
      "source": [
        "data_with_clusters"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_with_clusters['Clusters'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zmW5U5-yLhsC",
        "outputId": "1a882b57-ecaa-4e0b-eb3a-1b6f24b7494a"
      },
      "id": "zmW5U5-yLhsC",
      "execution_count": 289,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3    29\n",
              "4    24\n",
              "1    19\n",
              "0    16\n",
              "2    15\n",
              "Name: Clusters, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 289
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 290,
      "id": "80a6113f",
      "metadata": {
        "id": "80a6113f"
      },
      "outputs": [],
      "source": [
        "Segment_wise_mean=data_with_clusters[['AccelSec','TopSpeed_KmH','Range_Km','Efficiency_WhKm','FastCharge_KmH','PriceEuro','Clusters','Seats']].groupby('Clusters').mean()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 291,
      "id": "7421b583",
      "metadata": {
        "scrolled": true,
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "7421b583",
        "outputId": "d11e894c-e993-45c2-bf9d-52915a12e24e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          AccelSec  TopSpeed_KmH    Range_Km  Efficiency_WhKm  FastCharge_KmH  \\\n",
              "Clusters                                                                        \n",
              "0         4.031250    247.500000  474.062500       184.125000      736.875000   \n",
              "1         9.926316    147.684211  278.157895       178.578947      308.661053   \n",
              "2         9.866667    142.333333  207.333333       168.200000      327.216000   \n",
              "3         5.644828    195.448276  393.965517       217.482759      534.137931   \n",
              "4         8.208333    162.000000  312.083333       179.791667      370.000000   \n",
              "\n",
              "              PriceEuro     Seats  \n",
              "Clusters                           \n",
              "0         109193.062500  4.562500  \n",
              "1          36443.052632  5.157895  \n",
              "2          30655.600000  3.733333  \n",
              "3          65418.965517  5.379310  \n",
              "4          39670.833333  5.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-39031b30-95f8-47c4-98f5-689fcd127ab0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AccelSec</th>\n",
              "      <th>TopSpeed_KmH</th>\n",
              "      <th>Range_Km</th>\n",
              "      <th>Efficiency_WhKm</th>\n",
              "      <th>FastCharge_KmH</th>\n",
              "      <th>PriceEuro</th>\n",
              "      <th>Seats</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Clusters</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>4.031250</td>\n",
              "      <td>247.500000</td>\n",
              "      <td>474.062500</td>\n",
              "      <td>184.125000</td>\n",
              "      <td>736.875000</td>\n",
              "      <td>109193.062500</td>\n",
              "      <td>4.562500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>9.926316</td>\n",
              "      <td>147.684211</td>\n",
              "      <td>278.157895</td>\n",
              "      <td>178.578947</td>\n",
              "      <td>308.661053</td>\n",
              "      <td>36443.052632</td>\n",
              "      <td>5.157895</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>9.866667</td>\n",
              "      <td>142.333333</td>\n",
              "      <td>207.333333</td>\n",
              "      <td>168.200000</td>\n",
              "      <td>327.216000</td>\n",
              "      <td>30655.600000</td>\n",
              "      <td>3.733333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5.644828</td>\n",
              "      <td>195.448276</td>\n",
              "      <td>393.965517</td>\n",
              "      <td>217.482759</td>\n",
              "      <td>534.137931</td>\n",
              "      <td>65418.965517</td>\n",
              "      <td>5.379310</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>8.208333</td>\n",
              "      <td>162.000000</td>\n",
              "      <td>312.083333</td>\n",
              "      <td>179.791667</td>\n",
              "      <td>370.000000</td>\n",
              "      <td>39670.833333</td>\n",
              "      <td>5.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39031b30-95f8-47c4-98f5-689fcd127ab0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-39031b30-95f8-47c4-98f5-689fcd127ab0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-39031b30-95f8-47c4-98f5-689fcd127ab0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 291
        }
      ],
      "source": [
        "Segment_wise_mean"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_with_clusters[['AccelSec','TopSpeed_KmH','Range_Km','Efficiency_WhKm','FastCharge_KmH','PriceEuro','Clusters','Seats']].groupby('Clusters').min()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "_xbshwb5CpGG",
        "outputId": "d5200bce-e299-478d-efb0-7693174141dd"
      },
      "id": "_xbshwb5CpGG",
      "execution_count": 292,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          AccelSec  TopSpeed_KmH  Range_Km  Efficiency_WhKm  FastCharge_KmH  \\\n",
              "Clusters                                                                      \n",
              "0              2.1         150.0     310.0            104.0           540.0   \n",
              "1              7.3         123.0     160.0            154.0           190.0   \n",
              "2              6.5         130.0      95.0            156.0           170.0   \n",
              "3              2.8         160.0     280.0            171.0           340.0   \n",
              "4              5.1         140.0     180.0            153.0           190.0   \n",
              "\n",
              "          PriceEuro  Seats  \n",
              "Clusters                    \n",
              "0           46380.0    4.0  \n",
              "1           29146.0    4.0  \n",
              "2           20129.0    2.0  \n",
              "3           45000.0    5.0  \n",
              "4           25500.0    5.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-de6c2fa1-18b5-4a79-a88a-3878eddf0eac\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AccelSec</th>\n",
              "      <th>TopSpeed_KmH</th>\n",
              "      <th>Range_Km</th>\n",
              "      <th>Efficiency_WhKm</th>\n",
              "      <th>FastCharge_KmH</th>\n",
              "      <th>PriceEuro</th>\n",
              "      <th>Seats</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Clusters</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2.1</td>\n",
              "      <td>150.0</td>\n",
              "      <td>310.0</td>\n",
              "      <td>104.0</td>\n",
              "      <td>540.0</td>\n",
              "      <td>46380.0</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>7.3</td>\n",
              "      <td>123.0</td>\n",
              "      <td>160.0</td>\n",
              "      <td>154.0</td>\n",
              "      <td>190.0</td>\n",
              "      <td>29146.0</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6.5</td>\n",
              "      <td>130.0</td>\n",
              "      <td>95.0</td>\n",
              "      <td>156.0</td>\n",
              "      <td>170.0</td>\n",
              "      <td>20129.0</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2.8</td>\n",
              "      <td>160.0</td>\n",
              "      <td>280.0</td>\n",
              "      <td>171.0</td>\n",
              "      <td>340.0</td>\n",
              "      <td>45000.0</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5.1</td>\n",
              "      <td>140.0</td>\n",
              "      <td>180.0</td>\n",
              "      <td>153.0</td>\n",
              "      <td>190.0</td>\n",
              "      <td>25500.0</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de6c2fa1-18b5-4a79-a88a-3878eddf0eac')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-de6c2fa1-18b5-4a79-a88a-3878eddf0eac button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-de6c2fa1-18b5-4a79-a88a-3878eddf0eac');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 292
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_with_clusters[['AccelSec','TopSpeed_KmH','Range_Km','Efficiency_WhKm','FastCharge_KmH','PriceEuro','Clusters','Seats']].groupby('Clusters').max()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "vSwPxKIsDXAC",
        "outputId": "2f7730bd-9176-44d7-db88-e325208feeea"
      },
      "id": "vSwPxKIsDXAC",
      "execution_count": 293,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          AccelSec  TopSpeed_KmH  Range_Km  Efficiency_WhKm  FastCharge_KmH  \\\n",
              "Clusters                                                                      \n",
              "0             10.0         410.0     970.0            223.0          940.00   \n",
              "1             22.4         167.0     400.0            273.0          434.56   \n",
              "2             12.7         160.0     440.0            181.0          590.00   \n",
              "3              7.5         250.0     750.0            270.0          930.00   \n",
              "4             10.0         200.0     440.0            232.0          560.00   \n",
              "\n",
              "          PriceEuro  Seats  \n",
              "Clusters                    \n",
              "0          215000.0    5.0  \n",
              "1           70631.0    7.0  \n",
              "2           45000.0    4.0  \n",
              "3          102990.0    7.0  \n",
              "4           65000.0    5.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1ae18af8-bb3c-40a8-bbaa-497c7bec0459\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>AccelSec</th>\n",
              "      <th>TopSpeed_KmH</th>\n",
              "      <th>Range_Km</th>\n",
              "      <th>Efficiency_WhKm</th>\n",
              "      <th>FastCharge_KmH</th>\n",
              "      <th>PriceEuro</th>\n",
              "      <th>Seats</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Clusters</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>10.0</td>\n",
              "      <td>410.0</td>\n",
              "      <td>970.0</td>\n",
              "      <td>223.0</td>\n",
              "      <td>940.00</td>\n",
              "      <td>215000.0</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>22.4</td>\n",
              "      <td>167.0</td>\n",
              "      <td>400.0</td>\n",
              "      <td>273.0</td>\n",
              "      <td>434.56</td>\n",
              "      <td>70631.0</td>\n",
              "      <td>7.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>12.7</td>\n",
              "      <td>160.0</td>\n",
              "      <td>440.0</td>\n",
              "      <td>181.0</td>\n",
              "      <td>590.00</td>\n",
              "      <td>45000.0</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>7.5</td>\n",
              "      <td>250.0</td>\n",
              "      <td>750.0</td>\n",
              "      <td>270.0</td>\n",
              "      <td>930.00</td>\n",
              "      <td>102990.0</td>\n",
              "      <td>7.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>10.0</td>\n",
              "      <td>200.0</td>\n",
              "      <td>440.0</td>\n",
              "      <td>232.0</td>\n",
              "      <td>560.00</td>\n",
              "      <td>65000.0</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ae18af8-bb3c-40a8-bbaa-497c7bec0459')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1ae18af8-bb3c-40a8-bbaa-497c7bec0459 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1ae18af8-bb3c-40a8-bbaa-497c7bec0459');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 293
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Segment_wise_sum=data_with_clusters.drop(columns=['AccelSec','TopSpeed_KmH','Range_Km','Efficiency_WhKm','FastCharge_KmH','PriceEuro'],axis=1).groupby('Clusters').sum()"
      ],
      "metadata": {
        "id": "HjI68l-T8inz"
      },
      "id": "HjI68l-T8inz",
      "execution_count": 294,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Segment_wise_sum"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "id": "jntIJVPF8iZn",
        "outputId": "6ee6846a-98c4-4a7d-acc7-e137e68e6095"
      },
      "id": "jntIJVPF8iZn",
      "execution_count": 295,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          Seats  PowerTrain_AWD  PowerTrain_FWD  PowerTrain_RWD  \\\n",
              "Clusters                                                          \n",
              "0          73.0            14.0             0.0             2.0   \n",
              "1          98.0             0.0            19.0             0.0   \n",
              "2          56.0             0.0             5.0            10.0   \n",
              "3         156.0            24.0             0.0             5.0   \n",
              "4         120.0             3.0            13.0             8.0   \n",
              "\n",
              "          BodyStyle_Cabrio  BodyStyle_Hatchback  BodyStyle_Liftback  \\\n",
              "Clusters                                                              \n",
              "0                      1.0                  0.0                 4.0   \n",
              "1                      1.0                  5.0                 0.0   \n",
              "2                      1.0                 14.0                 0.0   \n",
              "3                      0.0                  0.0                 0.0   \n",
              "4                      0.0                 13.0                 1.0   \n",
              "\n",
              "          BodyStyle_MPV  BodyStyle_Pickup  BodyStyle_SPV  ...  \\\n",
              "Clusters                                                  ...   \n",
              "0                   0.0               0.0            0.0  ...   \n",
              "1                   1.0               0.0            3.0  ...   \n",
              "2                   0.0               0.0            0.0  ...   \n",
              "3                   0.0               3.0            0.0  ...   \n",
              "4                   0.0               0.0            0.0  ...   \n",
              "\n",
              "          BodyStyle_Sedan  BodyStyle_Station  Segment_A  Segment_B  Segment_C  \\\n",
              "Clusters                                                                        \n",
              "0                    10.0                1.0        0.0        0.0        0.0   \n",
              "1                     0.0                0.0        0.0       16.0        0.0   \n",
              "2                     0.0                0.0        7.0        6.0        2.0   \n",
              "3                     0.0                0.0        0.0        0.0        4.0   \n",
              "4                     0.0                0.0        0.0        0.0       24.0   \n",
              "\n",
              "          Segment_D  Segment_E  Segment_F  Segment_N  Segment_S  \n",
              "Clusters                                                         \n",
              "0               5.0        0.0       10.0        0.0        1.0  \n",
              "1               0.0        0.0        0.0        3.0        0.0  \n",
              "2               0.0        0.0        0.0        0.0        0.0  \n",
              "3              10.0       10.0        2.0        3.0        0.0  \n",
              "4               0.0        0.0        0.0        0.0        0.0  \n",
              "\n",
              "[5 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f201bee1-4cac-481c-911d-bc348eeb8fda\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Seats</th>\n",
              "      <th>PowerTrain_AWD</th>\n",
              "      <th>PowerTrain_FWD</th>\n",
              "      <th>PowerTrain_RWD</th>\n",
              "      <th>BodyStyle_Cabrio</th>\n",
              "      <th>BodyStyle_Hatchback</th>\n",
              "      <th>BodyStyle_Liftback</th>\n",
              "      <th>BodyStyle_MPV</th>\n",
              "      <th>BodyStyle_Pickup</th>\n",
              "      <th>BodyStyle_SPV</th>\n",
              "      <th>...</th>\n",
              "      <th>BodyStyle_Sedan</th>\n",
              "      <th>BodyStyle_Station</th>\n",
              "      <th>Segment_A</th>\n",
              "      <th>Segment_B</th>\n",
              "      <th>Segment_C</th>\n",
              "      <th>Segment_D</th>\n",
              "      <th>Segment_E</th>\n",
              "      <th>Segment_F</th>\n",
              "      <th>Segment_N</th>\n",
              "      <th>Segment_S</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Clusters</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>73.0</td>\n",
              "      <td>14.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>10.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>98.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>56.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>14.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>156.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>10.0</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>120.0</td>\n",
              "      <td>3.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>8.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>24.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f201bee1-4cac-481c-911d-bc348eeb8fda')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f201bee1-4cac-481c-911d-bc348eeb8fda button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f201bee1-4cac-481c-911d-bc348eeb8fda');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 295
        }
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.7"
    },
    "colab": {
      "name": "FINAL_EV_FILE_(1) (1).ipynb",
      "provenance": [],
      "collapsed_sections": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}